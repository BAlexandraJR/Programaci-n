codigo proyecto pila yy cola
#include <iostream>
#include <stack>
#include <queue>

using namespace std;

// Estructura de tarea
struct Task {
    string description;
    
};

// Clase para manejo de tareas :)
class TaskManager {
private:
    stack<Task> taskStack; // Pila para las tareas
    queue<Task> taskQueue; // Cola para las tareas

public:
    // tarea a la lista
    void addTask(const Task& task) {
        taskStack.push(task);
        taskQueue.push(task);
        cout << "Tarea agregada: " << task.description << endl;
    }

    // completar la última tarea de la pila :)
    void completeLastTask() {
        if (!taskStack.empty()) {
            cout << "Tarea completada: " << taskStack.top().description << endl;
            taskStack.pop();
        } else {
            cout << "No hay tareas pendientes para completar." << endl;
        }
    }

    // atender la tarea más antigua de la cola
    void attendOldestTask() {
        if (!taskQueue.empty()) {
            cout << "Tarea atendida: " << taskQueue.front().description << endl;
            taskQueue.pop();
        } else {
            cout << "No hay tareas pendientes para atender." << endl;
        }
    }

    // mostrar todas las tareas
    void showAllTasks() {
        cout << "Lista de tareas:" << endl;
        cout << "Pila de tareas:" << endl;
        stack<Task> tempStack = taskStack;
        while (!tempStack.empty()) {
            cout << "- " << tempStack.top().description << endl;
            tempStack.pop();
        }
        cout << "Cola de tareas:" << endl;
        queue<Task> tempQueue = taskQueue;
        while (!tempQueue.empty()) {
            cout << "- " << tempQueue.front().description << endl;
            tempQueue.pop();
        }
    }
};

int main() {
    TaskManager manager;
    int choice;

    do {
        cout << "\nMenu:\n";
        cout << "1. Agregar tarea\n";
        cout << "2. Completar última tarea\n";
        cout << "3. Atender tarea más antigua\n";
        cout << "4. Mostrar todas las tareas\n";
        cout << "5. Salir\n";
        cout << "Seleccione una opción: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                Task newTask;
                cout << "Ingrese la descripción de la nueva tarea: ";
                cin.ignore();
                getline(cin, newTask.description);
                manager.addTask(newTask);
                break;
            }
            case 2:
                manager.completeLastTask();
                break;
            case 3:
                manager.attendOldestTask();
                break;
            case 4:
                manager.showAllTasks();
                break;
            case 5:
                cout << "Saliendo del programa.\n";
                break;
            default:
                cout << "Opción inválida. Por favor, seleccione nuevamente.\n";
        }
    } while (choice != 5);

    return 0;
}
